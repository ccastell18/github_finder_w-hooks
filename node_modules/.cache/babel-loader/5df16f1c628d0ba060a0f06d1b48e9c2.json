{"ast":null,"code":"var _jsxFileName = \"/Users/chriscastellano/Desktop/github_finder_w-hooks/src/context/github/GithubState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, GET_REPOS, GET_USER, CLEAR_USERS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GithubState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); //search users\n\n  const searchUsers = async text => {\n    isLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_sectet=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; //get user\n\n\n  const getUser = async username => {\n    isLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_sectet=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; //get repos\n\n\n  const getUserRepos = async username => {\n    isLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_sectet=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; //clear users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); //setloading\n\n\n  const isLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      loading: state.loading,\n      repos: state.repos,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\nexport default GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["/Users/chriscastellano/Desktop/github_finder_w-hooks/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","GET_REPOS","GET_USER","CLEAR_USERS","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","isLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  GET_REPOS,\n  GET_USER,\n  CLEAR_USERS,\n} from '../types';\n\nconst GithubState = (props) => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  //search users\n  const searchUsers = async (text) => {\n    isLoading();\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_sectet=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items,\n    });\n  };\n  //get user\n  const getUser = async (username) => {\n    isLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_sectet=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    dispatch({\n      type: GET_USER,\n      payload: res.data,\n    });\n  };\n\n  //get repos\n  const getUserRepos = async (username) => {\n    isLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_sectet=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  };\n  //clear users\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n  //setloading\n  const isLoading = () => dispatch({ type: SET_LOADING });\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        loading: state.loading,\n        repos: state.repos,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos,\n      }}>\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}